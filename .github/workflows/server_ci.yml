name: Docker Build and Push

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
        type: string

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: pip install --no-cache-dir -r requirements.txt

      - name: Run Tests
        run: pytest test_app.py  # Test dosyanız burada çalıştırılıyor

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/server:${{ github.event.inputs.tag }} .
          docker build -t ${{ secrets.DOCKER_USERNAME }}/server:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/server:${{ github.event.inputs.tag }}
          docker push ${{ secrets.DOCKER_USERNAME }}/server:latest

      - name: Create and Push Tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Eğer tag zaten varsa silip tekrar ekleyelim (hata önlemek için)
          git tag -d ${{ github.event.inputs.tag }} || true
          git push --delete origin ${{ github.event.inputs.tag }} || true

          # Yeni tag oluştur ve push et
          git tag ${{ github.event.inputs.tag }}
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag }}  # Kullanıcının girdiği tag'i kullan
          name: Release ${{ github.event.inputs.tag }}  # Kullanıcının girdiği tag'i kullan
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}